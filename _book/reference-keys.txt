construire-un-package
initialiser-un-package
ajouter-une-fonction-exemple-fil-rouge
documenter-une-fonction
tester-le-package-de-manière-intéractive
tester-le-package-de-manière-automatique
faire-un-check-du-package
installer-le-package
contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue
principe-du-contrôle-de-version
git
subversion
utiliser-git-localement-depuis-rstudio
bonnes-pratiques-du-commit
github
mettre-son-package-sur-github
collaboration-pour-la-production-du-code
branches
merge
les-conflits
fork
pull-request
issues
intégration-continue
github-actions
construire-et-déployer-simplement-un-site-web-pour-accompagner-son-package
références-additionnelles
mesurer-et-comparer-des-temps-dexécution
mesurer-des-temps-dexécution-avec-system.time
comparer-des-temps-dexécution-avec-microbenchmark
profiler-son-code
comparaison-avec-une-version-plus-habile-de-mnvpdf
comparaison-avec-une-version-optimisée-dans-r
rcpp-ou-comment-intégrer-facilement-du-code-cdans-un-package-r
première-fonction-en-rcpp
optimisation-grâce-à-c
annexe-5.1-loptimisation-prématurée-nest-pas-une-bonne-idée
parallélisation-du-code-r
introduction-à-lexecution-parallèle-sous-r
première-fonction-parallèle-en-r
parallélisation-efficace
les-itérateurs
les-autres-plans-de-calculs-parallèle
parallélisation-dans-notre-exemple-fil-rouge
conclusion
take-home-message
