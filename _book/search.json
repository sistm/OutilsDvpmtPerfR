[{"path":"index.html","id":"présentation-de-la-formation","chapter":"Présentation de la formation","heading":"Présentation de la formation","text":"Placeholder","code":""},{"path":"index.html","id":"logiciels-et-librairies-nécessaires-à-la-formation","chapter":"Présentation de la formation","heading":"Logiciels et librairies nécessaires à la formation","text":"","code":""},{"path":"index.html","id":"pré-requis","chapter":"Présentation de la formation","heading":"Pré-requis","text":"","code":""},{"path":"construire-un-package.html","id":"construire-un-package","chapter":"Chapitre 1 Construire un package ","heading":"Chapitre 1 Construire un package ","text":"Nous présentons ici comment construire un package efficacement à l’aide d’outils\ngraphiques présents dans RStudio et du package devtools.Le support de référence sur ce sujet est le livre\nR packages1 d’Hadley Wickham & Jennifer Bryan, disponible en ligne.","code":""},{"path":"construire-un-package.html","id":"initialiser-un-package","chapter":"Chapitre 1 Construire un package ","heading":"1.1 Initialiser un package","text":"Une manière simple, et intégrée à RStudio, pour initialiser un package est d’executer les étapes suivantes :👉 À vous de jouer (déjà)!créer un nouveau projet (menu déroulant en haut à gauche dans RStudio)créer un nouveau projet (menu déroulant en haut à gauche dans RStudio)choisir “New Directory”choisir “New Directory”choisir “R package using devtools” (s’il n’est pas disponible c’est que le package devtools n’est pas installer et dans ce cas peut alors choisir “R package” – la différence étant qu’avec “R package”, il faudra supprimer des fichiers créés automatiquement mais inutiles)choisir “R package using devtools” (s’il n’est pas disponible c’est que le package devtools n’est pas installer et dans ce cas peut alors choisir “R package” – la différence étant qu’avec “R package”, il faudra supprimer des fichiers créés automatiquement mais inutiles)donner un nom au package, par exemple mypkgr.donner un nom au package, par exemple mypkgr.récupère alors la structure minimale pour un package , à savoir :un fichier DESCRIPTION dont les parties Title, Version, Authors@R et\nDescription sont à éditer (d’autres parties pourront être éditer voire\nmême ajouter de manière automatique, comme nous le verrons plus loin)un fichier DESCRIPTION dont les parties Title, Version, Authors@R et\nDescription sont à éditer (d’autres parties pourront être éditer voire\nmême ajouter de manière automatique, comme nous le verrons plus loin)un fichier NAMESPACE qui sera édité automatiquement ultérieurementun fichier NAMESPACE qui sera édité automatiquement ultérieurementun dossier R/ dans lequel va ajouter des fichiers de scripts .Run dossier R/ dans lequel va ajouter des fichiers de scripts .Rdevtools ajoute également trois fichiers facultatifs :.gitignore, relatif à git, outils de contrôle de version que nous verrons en détails dans la partie suivante sur git & GitHub.gitignore, relatif à git, outils de contrôle de version que nous verrons en détails dans la partie suivante sur git & GitHubmypkgr.Rproj qui est un fichier spécifique de RStudio, et permet de définirles caractéristiques et préférences du projet que nous venons de créermypkgr.Rproj qui est un fichier spécifique de RStudio, et permet de définirles caractéristiques et préférences du projet que nous venons de créer.Rbuildignore qui permet d’ignorer certains fichiers au moment où construira le package un peu plus loin (par exemple, le fichier mypkgr.Rproj ne doit pas être inclus dans le package).Rbuildignore qui permet d’ignorer certains fichiers au moment où construira le package un peu plus loin (par exemple, le fichier mypkgr.Rproj ne doit pas être inclus dans le package)","code":""},{"path":"construire-un-package.html","id":"ajouter-une-fonction-exemple-fil-rouge","chapter":"Chapitre 1 Construire un package ","heading":"1.2 Ajouter une fonction : exemple fil rouge","text":"Nous vous proposons de coder la fonction suivante, que nous reprendrons tout au\nlong de la formation :Nous souhaitons calculer la valeur de la densité d’une loi normale multivariée\nsur \\(\\mathbb{R}^p\\) en \\(n\\) points. Notre fonction doit pouvoir s’appliquer pour\nn’importe quelle loi normale multivariée (vecteur de moyennes \\(\\boldsymbol \\mu\\) dans\n\\(\\mathbb{R}^p\\) et matrice de variance-covariance \\(\\boldsymbol\\Sigma\\) d’ordre de \\(p\\) quelconques),\net souhaite pouvoir calculer toutes les valeurs de la densité évaluées\nsur les \\(n\\) points \\(\\mathbf{x}\\) en un seul appel de la fonction.Pour rappel, la fonction de densité d’une loi normale multivariée s’écrit :\n\\[\\displaystyle (2\\pi )^{-p/2}\\det({\\boldsymbol {\\Sigma }})^{-1/2}\\,\\exp \\left(-{\\frac {1}{2}}(\\mathbf {x} -{\\boldsymbol {\\mu }})^{\\mathsf {T}}{\\boldsymbol {\\Sigma }}^{-1}(\\mathbf {x} -{\\boldsymbol {\\mu }})\\right)\\]Vous devez donc créer une fonction mvnpdf() dans un fichier nommé mvnpdf.R\ndans le dossier R/ du package, qui :prend en arguments :\nx une matrice, à \\(n\\) colonnes (les observations) et \\(p\\) lignes\nmean un vecteur de moyennes\nvarcovM une matrice de variance-covariance\nLog un paramètre logique valant TRUE par défaut\nprend en arguments :x une matrice, à \\(n\\) colonnes (les observations) et \\(p\\) lignesx une matrice, à \\(n\\) colonnes (les observations) et \\(p\\) lignesmean un vecteur de moyennesmean un vecteur de moyennesvarcovM une matrice de variance-covariancevarcovM une matrice de variance-covarianceLog un paramètre logique valant TRUE par défautLog un paramètre logique valant TRUE par défautrenvoie une liste contenant la matrice x ainsi qu’un vecteur des images\ndes points de x par la fonction de densité de la variable aléatoire de loi\nnormale multivariée considérée.renvoie une liste contenant la matrice x ainsi qu’un vecteur des images\ndes points de x par la fonction de densité de la variable aléatoire de loi\nnormale multivariée considérée.👉 À vous de jouer !Voici une proposition de fonction que vous pouvez télécharger\nici. ⚠️ ATTENTION ! Si vous cliquez trop vite sur le lien ci-dessous, cela invalidera votre participation à la formation !Pour des conseils lors de la rédaction de code, voir le chapitre\nR code dans R packages (2023) de Wickham & Bryan2.","code":""},{"path":"construire-un-package.html","id":"documenter-une-fonction","chapter":"Chapitre 1 Construire un package ","heading":"1.3 Documenter une fonction","text":"Il est important de bien documenter votre code. Tout projet au moins 2\ndéveloppeurs :vousvousvous dans 6 moisvous dans 6 moisPar égard à votre “futur vous”, soyez sympas et prenez le temps de documenter\nvotre code 😉 !Nous vous conseillons vivement d’utiliser le package roxygen2 pour documenter\nvos packages. L’avantage principal étant d’avoir l’aide d’une fonction dans\nle même fichier que le code définissant cette fonction.👉 À vous de jouer !Commencer par insérer le squelette de l’aide grâce à “Insert Roxygen\nSkeleton” situé dans le menu “Code” ou le sous-menu Baguette magique dans\nla fenêtre de script.Commencer par insérer le squelette de l’aide grâce à “Insert Roxygen\nSkeleton” situé dans le menu “Code” ou le sous-menu Baguette magique dans\nla fenêtre de script.Compléter la documentation en renseignant :\nle titre de la fonction (première ligne)\nla description de ce que fait la fonction (deuxième paragraphe)\nsi vous renseignez un troisième paragraphe, cette partie ira dans la section “Details” de la page d’aide\nla signification des paramètres\nla sortie, après la balise @return\nCompléter la documentation en renseignant :le titre de la fonction (première ligne)le titre de la fonction (première ligne)la description de ce que fait la fonction (deuxième paragraphe)la description de ce que fait la fonction (deuxième paragraphe)si vous renseignez un troisième paragraphe, cette partie ira dans la section “Details” de la page d’aidesi vous renseignez un troisième paragraphe, cette partie ira dans la section “Details” de la page d’aidela signification des paramètresla signification des paramètresla sortie, après la balise @returnla sortie, après la balise @returnGénérer la documentation à l’aide de “Document” dans le menu “” de l’onglet “Build” (ou Ctrl+Shift+D ou devtools::document()). L’effet de cette commande est multiple :\nun dossier man été créé et à l’intérieur, un fichier mvnpdf.Rd été créé et contient les informations de l’aide de la fonction\nle fichier NAMESPACE été modifié\nGénérer la documentation à l’aide de “Document” dans le menu “” de l’onglet “Build” (ou Ctrl+Shift+D ou devtools::document()). L’effet de cette commande est multiple :un dossier man été créé et à l’intérieur, un fichier mvnpdf.Rd été créé et contient les informations de l’aide de la fonctionun dossier man été créé et à l’intérieur, un fichier mvnpdf.Rd été créé et contient les informations de l’aide de la fonctionle fichier NAMESPACE été modifiéle fichier NAMESPACE été modifiéEn cas de bug ou par curiosité ET une fois que vous avez terminé vous pouvez consulter cette proposition.Pour plus de détails sur la documentation de package et les balises\nroxygen2, voir la page\nObject documentation du site d’Hadley.Finissons par évoquer une fonction du package usethis qui initialise une\npage d’aide pour le package dans son ensemble :La page d’aide générée sera alors accessible, une fois le package installé,\nvia :","code":"\nusethis::use_package_doc()\n?mypkgr"},{"path":"construire-un-package.html","id":"tester-le-package-de-manière-intéractive","chapter":"Chapitre 1 Construire un package ","heading":"1.4 Tester le package de manière intéractive","text":"Pour tester le package, vous devez le charger dans R à l’aide de :\ndans l’onglet “Build”, le menu “” puis “Load ” (ou Ctrl+Shift+L ou\ndevtools::load_all()).Vous pouvez alors utiliser votre package directement dans R : consulter\nl’aide de la fonction avec ?mvnpdf et par exemple exécuter les commandes renseignées dans la section exemple de cette page d’aide.Ainsi, lors du développement, vous pouvez :Ajouter/Modifier le code Ajouter/Modifier le code Re-charger le package Ctrl+Shift+LRe-charger le package Ctrl+Shift+LL’essayer dans la consoleL’essayer dans la consoleEt ainsi de suite…Et ainsi de suite…","code":"\n?mvndpf"},{"path":"construire-un-package.html","id":"tester-le-package-de-manière-automatique","chapter":"Chapitre 1 Construire un package ","heading":"1.5 Tester le package de manière automatique","text":"Pour initialiser la fonctionnalité de tests automatiques dans le package, executer la commande suivante :Cette commande induit la création d’un dossier tests qui comprend un fichier testthat.R – à ne pas modifier – et un dossier testthat/ dans lequel va insérer nos tests. Cet outils s’appuie sur la théorie des tests unitaires.Voici par exemple le contenu d’un fichier contenant 2 tests qui devrait s’appeller test-mvnpdf.R à mettre dans le dossier testthat/ (plutôt que de le créer vous-même, vous pouvez simplement utiliser la fonction usethis::use_test() qui créera le fichier pour vous en le plaçant directement au bon endroit) :Pour exécuter ces tests, peut utiliser “Test package” (Ctrl+Shift+T) du menu “” dans l’onglet “Build”, ou alors executer devtools::test() dans la console.L’avantage de ces tests automatiques est qu’ils vont\ns’exécuter à chaque fois qu’effectuera un check du package.Une bonne pratique est d’ajouter un test unitaire à chaque fois qu’un bug est identifié et résolu,\nafin de pouvoir immédiatement identifier et prévenir qu’une erreur identique ne se reproduise dans\nle futur.","code":"\nusethis::use_testthat()\ntest_that(\"correct result for univariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(1.96), Log=FALSE)$y, dnorm(1.96))\n  expect_equal(mvnpdf(x=matrix(c(1.96, -0.5), ncol = 2), Log=FALSE)$y,\n               dnorm(c(1.96, -0.5)))\n})\n\ntest_that(\"correct results for bivariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(rep(1.96,2), nrow=2, ncol=1), Log=FALSE)$y,\n               mvtnorm::dmvnorm(rep(1.96, 2)))\n})"},{"path":"construire-un-package.html","id":"faire-un-check-du-package","chapter":"Chapitre 1 Construire un package ","heading":"1.6 Faire un check du package","text":"Faire un check signifie vérifier que tout est correct dans le package et fonctionne comme attendu, afin que l package puisse s’installer sans problème sur différents systèmes d’exploitation. Il est impératif de “passer” le R CMD CHECK pour pouvoir déposer un package sur le CRAN.Pour exécuter celui-ci, utiliser “Check” (Ctrl+Shift+E) dans l’onglet “Build”, ou alors executez devtools::check() dans la console.Lors du R CMD CHECK, les tests que nous avons mis au point précédemment sont exécutées. C’est justement l’avantage d’avoir fait ces tests, nous n’avons plus besoin de s’en préoccuper, mais juste de réagir en cas d’erreurs renvoyées.","code":""},{"path":"construire-un-package.html","id":"installer-le-package","chapter":"Chapitre 1 Construire un package ","heading":"1.7 Installer le package","text":"Pour le moment, le package n’existe que dans l’environnement associé au projet Rstudio qu’créé. Pour pouvoir l’utiliser dans R de manière générale, il faut l’installer (comme un package du CRAN par exemple).Pour faire ça, utiliser “Install Restart” Ctrl+Shift+B dans l’onglet “Build” (devtools::install() ou ).Et enfin, vous pouvez configurer le comportement de RStudio pour qu’au moment de l’installation, il documente en même temps le package : aller dans l’onglet “Build”, le menu “” puis “Configure Build Tools…”. Cliquer ensuite sur “Configure” juste à côté de “Generate documentation Roxygen” puis cocher la case “Install Restart”.","code":""},{"path":"construire-un-package.html","id":"annexe-1.1-ajouter-une-méthode-s3","chapter":"Chapitre 1 Construire un package ","heading":"Annexe 1.1 : ajouter une méthode S3","text":"Dans la plupart des packages est amenés à implémenter des méthodes S3,\ntrès souvent pour qu’à partir d’un objet résultat res, puisse exécuter\nprint(res), summary(res), plot(res)…Voici un exemple de méthode plot() qu’peut ajouter dans notre package :⚠️ ATTENTION ! Pour que cette méthode fasse bien ce qu’veut quand \nl’applique au résultat de notre fonction mvnpdf(), il faut déclarer que\nce résultat est de classe mvnpdf.Tester cette fonction, en exécutant l’exemple.N’oubliez pas de réinstaller le package (“Install Restart” ou Ctrl+Shift+B).Consulter le contenu du dossier man et les modifications qui ont été\napportées au fichier NAMESPACE.Voici une proposition de solution : le\nfichier\ncontient le code complet\nde la fonction mvnpdf() et de la méthode plot() associée.","code":"\n#' Plot of the mvnpdf function\n#'\n#' @param x an object of class \\code{mvnpdf} resulting from a call of\n#' \\code{mnvpdf()} function.\n#' @param ... graphical parameters passed to \\code{plot()} function.\n#'\n#' @return Nothing is returned, only a plot is given.\n#' @export\n#'\n#' @examples\n#' pdfvalues <- mvnpdf(x=matrix(seq(-3, 3, by = 0.1), nrow = 1), Log=FALSE)\n#' plot(pdfvalues)\nplot.mvnpdf <- function(x, ...) {\n  plot(x$x, x$y, type = \"l\", ...)\n}"},{"path":"construire-un-package.html","id":"annexe-1.2-soumettre-son-package-au-cran","chapter":"Chapitre 1 Construire un package ","heading":"Annexe 1.2 : soumettre son package au CRAN","text":"Executer les 2 commandes suivantes : devtools::check() puis devtools::submit_cran().Pour plus de détails, voir la procédure recommandée dans Wickham & Bryan (2023)3","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","text":"Placeholder","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"principe-du-contrôle-de-version","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.1 Principe du contrôle de version","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"git","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.1.1 git","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"subversion","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.1.2 subversion","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"utiliser-git-localement-depuis-rstudio","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.2 Utiliser git localement depuis RStudio","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"bonnes-pratiques-du-commit","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.2.1 Bonnes pratiques du commit","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"github","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.3 GitHub","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"mettre-son-package-sur-github","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.3.1 Mettre son package  sur GitHub","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"collaboration-pour-la-production-du-code","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.4 Collaboration pour la production du code","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"branches","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.4.1 Branches","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"merge","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.4.2 Merge","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"les-conflits","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.4.3 Les conflits","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"fork","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.4.4 Fork","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"pull-request","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.4.5 Pull request","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"issues","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.4.6 Issues","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"intégration-continue","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.5 Intégration continue","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"github-actions","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.5.1 GitHub Actions","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"construire-et-déployer-simplement-un-site-web-pour-accompagner-son-package","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.6 Construire et déployer simplement un site web pour accompagner son package","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"références-additionnelles","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"2.7 Références additionnelles","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"annexe-2.1-r-hub","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"Annexe 2.1 : R-hub","text":"","code":""},{"path":"contrôle-de-version-avec-git-et-github-historique-de-changement-développement-collaboratif-et-intégration-continue.html","id":"annexe-2.2-couverture-du-code","chapter":"Chapitre 2 Contrôle de version avec git et GitHub: historique de changement, développement collaboratif et intégration continue","heading":"Annexe 2.2 : couverture du code","text":"","code":""},{"path":"mesurer-et-comparer-des-temps-dexécution.html","id":"mesurer-et-comparer-des-temps-dexécution","chapter":"Chapitre 3 Mesurer et comparer des temps d’exécution","heading":"Chapitre 3 Mesurer et comparer des temps d’exécution","text":"Placeholder","code":""},{"path":"mesurer-et-comparer-des-temps-dexécution.html","id":"mesurer-des-temps-dexécution-avec-system.time","chapter":"Chapitre 3 Mesurer et comparer des temps d’exécution","heading":"3.1 Mesurer des temps d’exécution avec system.time()","text":"","code":""},{"path":"mesurer-et-comparer-des-temps-dexécution.html","id":"comparer-des-temps-dexécution-avec-microbenchmark","chapter":"Chapitre 3 Mesurer et comparer des temps d’exécution","heading":"3.2 Comparer des temps d’exécution avec microbenchmark()","text":"","code":""},{"path":"profiler-son-code.html","id":"profiler-son-code","chapter":"Chapitre 4 Profiler son code","heading":"Chapitre 4 Profiler son code","text":"Placeholder","code":""},{"path":"profiler-son-code.html","id":"comparaison-avec-une-version-plus-habile-de-mnvpdf","chapter":"Chapitre 4 Profiler son code","heading":"4.1 Comparaison avec une version plus habile de mnvpdf()","text":"","code":""},{"path":"profiler-son-code.html","id":"comparaison-avec-une-version-optimisée-dans-r","chapter":"Chapitre 4 Profiler son code","heading":"4.2 Comparaison avec une version optimisée dans R","text":"","code":""},{"path":"rcpp-ou-comment-intégrer-facilement-du-code-cdans-un-package-r.html","id":"rcpp-ou-comment-intégrer-facilement-du-code-cdans-un-package-r","chapter":"Chapitre 5 Rcpp ou comment intégrer facilement du code C++dans un package R","heading":"Chapitre 5 Rcpp ou comment intégrer facilement du code C++dans un package R","text":"Placeholder","code":""},{"path":"rcpp-ou-comment-intégrer-facilement-du-code-cdans-un-package-r.html","id":"première-fonction-en-rcpp","chapter":"Chapitre 5 Rcpp ou comment intégrer facilement du code C++dans un package R","heading":"5.1 Première fonction en Rcpp","text":"","code":""},{"path":"rcpp-ou-comment-intégrer-facilement-du-code-cdans-un-package-r.html","id":"optimisation-grâce-à-c","chapter":"Chapitre 5 Rcpp ou comment intégrer facilement du code C++dans un package R","heading":"5.2 Optimisation grâce à C++","text":"","code":""},{"path":"rcpp-ou-comment-intégrer-facilement-du-code-cdans-un-package-r.html","id":"annexe-5.1-loptimisation-prématurée-nest-pas-une-bonne-idée","chapter":"Chapitre 5 Rcpp ou comment intégrer facilement du code C++dans un package R","heading":"5.3 Annexe 5.1 : l’optimisation prématurée n’est pas une bonne idée","text":"","code":""},{"path":"parallélisation-du-code-r.html","id":"parallélisation-du-code-r","chapter":"Chapitre 6 Parallélisation du code R","heading":"Chapitre 6 Parallélisation du code R","text":"Placeholder","code":""},{"path":"parallélisation-du-code-r.html","id":"introduction-à-lexecution-parallèle-sous-r","chapter":"Chapitre 6 Parallélisation du code R","heading":"6.1 Introduction à l’execution parallèle sous R","text":"","code":""},{"path":"parallélisation-du-code-r.html","id":"première-fonction-parallèle-en-r","chapter":"Chapitre 6 Parallélisation du code R","heading":"6.2 Première fonction parallèle en R","text":"","code":""},{"path":"parallélisation-du-code-r.html","id":"parallélisation-efficace","chapter":"Chapitre 6 Parallélisation du code R","heading":"6.3 Parallélisation efficace","text":"","code":""},{"path":"parallélisation-du-code-r.html","id":"les-itérateurs","chapter":"Chapitre 6 Parallélisation du code R","heading":"6.3.1 Les itérateurs","text":"","code":""},{"path":"parallélisation-du-code-r.html","id":"les-autres-plans-de-calculs-parallèle","chapter":"Chapitre 6 Parallélisation du code R","heading":"6.3.2 Les autres “plans” de calculs parallèle","text":"","code":""},{"path":"parallélisation-du-code-r.html","id":"parallélisation-dans-notre-exemple-fil-rouge","chapter":"Chapitre 6 Parallélisation du code R","heading":"6.4 Parallélisation dans notre exemple fil rouge","text":"","code":""},{"path":"parallélisation-du-code-r.html","id":"conclusion","chapter":"Chapitre 6 Parallélisation du code R","heading":"6.5 Conclusion","text":"","code":""},{"path":"take-home-message.html","id":"take-home-message","chapter":"Chapitre 7 Take Home message","heading":"Chapitre 7 Take Home message","text":"FAITES DES PACKAGESFAITES DES PACKAGESutilisez git, au moins pour vous en localutilisez git, au moins pour vous en localsi besoin (.e. après optimisation du code R lui même), n’ayez pas peur de vous tourner vers Rcpp et/ou la\nparallélisation de votre codesi besoin (.e. après optimisation du code R lui même), n’ayez pas peur de vous tourner vers Rcpp et/ou la\nparallélisation de votre code","code":""},{"path":"références.html","id":"références","chapter":"Références","heading":"Références","text":"Les livres en ligne d’Hadley Wickham sont vraiment excellents et contiennent\nbeaucoup de compléments par rapport à tout ce que l’traité dans cette\nformation :\nle site sur la construction de package R packages.\nle site Advanced R pour tout ce qui concerne\nl’optimisation, Rcpp, ou encore le calcul parallèle.\nle site R Data Science est également très\ncomplet et comprend des chapitres sur la gestion des structures de données\ndans R, mais aussi la modélisation ainsi que des éléments sur les graphiques et\nRmarkdown.\nLes livres en ligne d’Hadley Wickham sont vraiment excellents et contiennent\nbeaucoup de compléments par rapport à tout ce que l’traité dans cette\nformation :le site sur la construction de package R packages.le site sur la construction de package R packages.le site Advanced R pour tout ce qui concerne\nl’optimisation, Rcpp, ou encore le calcul parallèle.le site Advanced R pour tout ce qui concerne\nl’optimisation, Rcpp, ou encore le calcul parallèle.le site R Data Science est également très\ncomplet et comprend des chapitres sur la gestion des structures de données\ndans R, mais aussi la modélisation ainsi que des éléments sur les graphiques et\nRmarkdown.le site R Data Science est également très\ncomplet et comprend des chapitres sur la gestion des structures de données\ndans R, mais aussi la modélisation ainsi que des éléments sur les graphiques et\nRmarkdown.le livre en ligne Rcpp everyone de\nMasaki E. Tsuda est également très bien.le livre en ligne Rcpp everyone de\nMasaki E. Tsuda est également très bien.","code":""}]
